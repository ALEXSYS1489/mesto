(()=>{"use strict";var e=document.querySelector(".profile__edit-button"),t=document.querySelector(".popup_type_edit"),n=t.querySelector(".popup__form"),r=t.querySelector(".popup__input_value_name"),o=t.querySelector(".popup__input_value_about"),i=document.querySelector(".profile__name"),u=document.querySelector(".profile__about"),c=document.querySelector(".elements"),a=document.querySelector("#element-template").content.querySelector(".element"),s=document.querySelector(".profile__add-button"),l=document.querySelector(".popup_type_add"),f=l.querySelector(".popup__form"),p=document.querySelector(".popup_type_image"),h=document.querySelector(".popup_type_avatar"),_=h.querySelector(".popup__form"),d=document.querySelector(".profile__avatar-button"),y=document.querySelector(".profile__image"),v=document.querySelector(".popup_type_confirm"),b={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save",inactiveButtonClass:"popup__save_active",inputErrorClass:"popup__input_error",errorClass:"popup__error_active",popupErrorType:".popup__error_type_"};function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var k=function(){function e(t,n,r,o,i,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=t,this._user=n,this._name=t.name,this._link=t.link,this._likes=t.likes,this._template=r,this._handleCardClick=o,this._handleClickDelete=i,this._handleClickLike=u}var t,n;return t=e,(n=[{key:"createElement",value:function(){var e=this;return this.card=this._template.cloneNode(!0),this._elementImage=this.card.querySelector(".element__image"),this._elementName=this.card.querySelector(".element__name"),this._elementLikes=this.card.querySelector(".element__likes"),this._elementName.textContent=this._name,this._elementImage.setAttribute("src",this._link),this._elementImage.setAttribute("alt",this._name),this._elementButtonDel=this.card.querySelector(".element__remove"),this._elementButtonLike=this.card.querySelector(".element__like"),this._bindDeleteHandler(),this._bindLikeHandler(),this._bindOpenHandler(),this.setLikes(this._likes),this._data.owner._id===this._user._id&&this._elementButtonDel.classList.remove("element__remove_inactive"),this._likes.some((function(t){return t._id===e._user._id}))&&this._elementButtonLike.classList.toggle("element__like_active"),this.card}},{key:"_bindDeleteHandler",value:function(){var e=this;this._elementButtonDel.addEventListener("click",(function(){e._handleClickDelete(e)}))}},{key:"_bindLikeHandler",value:function(){var e=this;this._elementButtonLike.addEventListener("click",(function(){e._handleClickLike()}))}},{key:"_bindOpenHandler",value:function(){this._elementImage.addEventListener("click",this._handleCardClick)}},{key:"getId",value:function(){return this._data._id}},{key:"removeCard",value:function(){this.card.remove(),this.card=null}},{key:"getLike",value:function(){return!!this._elementButtonLike.classList.contains("element__like_active")}},{key:"setLikes",value:function(e){this._elementLikes.textContent=e.length}},{key:"updateLikes",value:function(){this._elementButtonLike.classList.toggle("element__like_active")}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var w=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),E(this,"_showInputError",(function(e,t){var n=r._form.querySelector("".concat(r._classes.popupErrorType).concat(e.id));e.classList.add(r._classes.inputErrorClass),n.textContent=t,n.classList.add(r._classes.errorClass)})),E(this,"_hideInputError",(function(e){var t=r._form.querySelector("".concat(r._classes.popupErrorType).concat(e.id));e.classList.remove(r._classes.inputErrorClass),t.classList.remove(r._classes.errorClass),t.textContent=""})),E(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e,e.validationMessage)})),E(this,"_setEventListeners",(function(){return r.toggleButtonState(),r._inputList.forEach((function(e){e.addEventListener("input",(function(){r._checkInputValidity(e),r.toggleButtonState(r._inputList,r._buttonElement)}))})),r._buttonElement})),E(this,"enableValidation",(function(){r._setEventListeners()})),this._classes=t,this._form=n,this._inputList=Array.from(this._form.querySelectorAll(this._classes.inputSelector)),this._buttonElement=this._form.querySelector(this._classes.submitButtonSelector)}var t,n;return t=e,(n=[{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.setAttribute("disabled","disabled"),this._buttonElement.classList.remove(this._classes.inactiveButtonClass)):(this._buttonElement.removeAttribute("disabled"),this._buttonElement.classList.add(this._classes.inactiveButtonClass))}},{key:"deleteErrors",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var S=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=n}var t,n;return t=e,n=[{key:"renderItems",value:function(e){var t=this,n=e.items,r=e.user;n.forEach((function(e){t._renderer({element:e,user:r})}))}},{key:"addItem",value:function(e){this._container.append(e)}}],n&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._buttonClosePopup=this._popup.querySelector(".popup__close"),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_is-opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_is-opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._buttonClosePopup.addEventListener("click",(function(t){e.close(e._popup)})),this._popup.addEventListener("click",(function(t){t.target===t.currentTarget&&e.close(e._popup)}))}}])&&L(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function R(){return R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=q(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},R.apply(this,arguments)}function q(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}function B(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}var x=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return B(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._name=t._popup.querySelector(".popup__image-name"),t._image=t._popup.querySelector(".popup__image"),t}return t=u,(n=[{key:"open",value:function(e,t){this._name.textContent=e,this._image.setAttribute("src",t),this._image.setAttribute("alt",e),R(T(u.prototype),"open",this).call(this)}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(C);function A(e){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A(e)}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function U(){return U="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=N(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},U.apply(this,arguments)}function N(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=J(e)););return e}function H(e,t){return H=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},H(e,t)}function V(e,t){if(t&&("object"===A(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function J(e){return J=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},J(e)}var z=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&H(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=J(r);if(o){var n=J(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return V(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._callback=t,n._form=n._popup.querySelector(".popup__form"),n.inputs=n._form.querySelectorAll(".popup__input"),n.buttonSave=n._popup.querySelector(".popup__save"),n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._values={},this.inputs.forEach((function(t){e._values[t.name]=t.value})),this._values}},{key:"setEventListeners",value:function(){var e=this;U(J(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._callback(e._getInputValues())}))}},{key:"close",value:function(){U(J(u.prototype),"close",this).call(this),this._form.reset()}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(C);function M(e){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},M(e)}function F(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function G(){return G="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=K(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},G.apply(this,arguments)}function K(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=X(e)););return e}function Q(e,t){return Q=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Q(e,t)}function W(e,t){if(t&&("object"===M(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function X(e){return X=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},X(e)}var Y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Q(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=X(r);if(o){var n=X(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return W(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._callback=t,n._confirmButtom=n._popup.querySelector(".popup__confirm"),n}return t=u,(n=[{key:"setEventListeners",value:function(){var e=this;G(X(u.prototype),"setEventListeners",this).call(this),this._confirmButtom.addEventListener("click",(function(t){e._callback(e._element)}))}},{key:"setElement",value:function(e){this._element=e}}])&&F(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(C);function Z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var $=function(){function e(t){var n=t.userName,r=t.userAbout,o=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=n,this._userAbout=r,this._avatar=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this.info={name:this._userName.textContent,about:this._userAbout.textContent},this.info}},{key:"setUserInfo",value:function(e){this._userName.textContent=e.name,this._userAbout.textContent=e.about,this._avatar.setAttribute("src",e.avatar)}}])&&Z(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function ee(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var te=new(function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers,this._id=t.id,this._link="".concat(this._url,"/v1/").concat(this._id)}var t,n;return t=e,(n=[{key:"getAllCards",value:function(){var e=this;return fetch("".concat(this._link,"/cards"),{headers:this._headers}).then((function(t){return e._onResponce(t)}))}},{key:"getUser",value:function(){var e=this;return fetch("".concat(this._link,"/users/me"),{headers:this._headers}).then((function(t){return e._onResponce(t)}))}},{key:"editUser",value:function(e,t){var n=this;return fetch("".concat(this._link,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((function(e){return n._onResponce(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._link,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){return t._onResponce(e)}))}},{key:"addCard",value:function(e,t){var n=this;return fetch("".concat(this._link,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((function(e){return n._onResponce(e)}))}},{key:"_onResponce",value:function(e){return e.ok?e.json():Promise.reject({massage:"Ошибка на сервере",res:e})}},{key:"addLike",value:function(e){var t=this;return fetch("".concat(this._link,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then((function(e){return t._onResponce(e)}))}},{key:"deleteLike",value:function(e){var t=this;return fetch("".concat(this._link,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then((function(e){return t._onResponce(e)}))}},{key:"editAvatar",value:function(e){var t=this;return fetch("".concat(this._link,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((function(e){return t._onResponce(e)}))}}])&&ee(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())({id:"cohort-51",url:"https://mesto.nomoreparties.co",headers:{authorization:"c544db48-3dd6-45bf-8d5d-369e754e242d","Content-Type":"application/json"}}),ne=new w(b,f),re=new w(b,n),oe=new w(b,_),ie=new $({userName:i,userAbout:u,avatar:y}),ue=new z(t,(function(e){ue.buttonSave.textContent="Сохранение...",te.editUser(e.name,e.about).then((function(e){ie.setUserInfo(e),ue.close(),re.toggleButtonState()})).catch((function(e){console.log("Ошибка сервера",e)})).finally((function(){ue.buttonSave.textContent="Сохраненить"}))})),ce=new z(l,(function(e){ce.buttonSave.textContent="Сохранение...",Promise.all([te.getUser(),te.addCard(e.name,e.link)]).then((function(e){fe.addItem(pe(e[1],e[0])),ce.close(),ne.toggleButtonState()})).catch((function(e){console.log("Ошибка сервера",e)})).finally((function(){ce.buttonSave.textContent="Сохраненить"}))})),ae=new z(h,(function(e){ae.buttonSave.textContent="Сохранение...",te.editAvatar(e.avatar).then((function(e){ie.setUserInfo(e),ae.close(),oe.toggleButtonState()})).catch((function(e){console.log("Ошибка сервера",e)})).finally((function(){ae.buttonSave.textContent="Сохраненить"}))})),se=new x(p),le=new Y(v,(function(e){te.deleteCard(e.getId()).then((function(){e.removeCard(),le.close()})).catch((function(e){console.log("Ошибка сервера",e)}))})),fe=new S({renderer:function(e){var t=pe(e.element,e.user);fe.addItem(t)}},c);function pe(e,t){var n=new k(e,t,a,(function(){se.open(e.name,e.link)}),(function(e){le.open(),le.setElement(e)}),(function(){n.getLike()?te.deleteLike(n.getId()).then((function(e){n.setLikes(e.likes),n.updateLikes()})).catch((function(e){console.log("Ошибка сервера",e)})):te.addLike(n.getId()).then((function(e){n.setLikes(e.likes),n.updateLikes()})).catch((function(e){console.log("Ошибка сервера",e)}))}));return n.createElement()}s.addEventListener("click",(function(){ne.deleteErrors(),ne.toggleButtonState(),ce.open()})),e.addEventListener("click",(function(){ie.getUserInfo(),r.value=ie.info.name,o.value=ie.info.about,re.deleteErrors(),ue.open()})),d.addEventListener("click",(function(){oe.deleteErrors(),ae.open()})),ne.enableValidation(),re.enableValidation(),ue.setEventListeners(),ce.setEventListeners(),se.setEventListeners(),le.setEventListeners(),oe.enableValidation(),ae.setEventListeners(),Promise.all([te.getUser(),te.getAllCards()]).then((function(e){ie.setUserInfo(e[0]),fe.renderItems({items:e[1],user:e[0]})})).catch((function(e){console.log("Ошибка сервера",e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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a0Msb0JBQzFCekIsR0FBc0J5QixvQkFDdEJmLEdBQU1lLG9CQUNOZCxHQUFhYyxvQkFDYm5DLEdBQWdCa0MsbUJBQ2hCaEIsR0FBcUJpQixvQkFLckIxQyxRQUFRa0IsSUFBSSxDQUFDbkMsR0FBSW9DLFVBQVdwQyxHQUFJNEQsZ0JBQzdCckQsTUFBSyxTQUFDK0IsR0FDTHpKLEdBQUsrSSxZQUFZVSxFQUFRLElBQ3pCQyxHQUFhc0IsWUFBWSxDQUFDekcsTUFBT2tGLEVBQVEsR0FBSXpKLEtBQU15SixFQUFRLElBQzVELElBQ0FULE9BQU0sU0FBQ0MsR0FDTkMsUUFBUUMsSUFBSSxpQkFBa0JGLEVBQy9CLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHRzL3V0aWxzLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3NjcmlwdHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvc2NyaXB0cy9TZWN0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3NjcmlwdHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvc2NyaXB0cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvc2NyaXB0cy9Qb3B1cENvbmZpcm0uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvc2NyaXB0cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9zY3JpcHRzL0FwaS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgYnV0dG9uT3BlblBvcHVwUHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZWRpdC1idXR0b25cIik7XHJcbmV4cG9ydCBjb25zdCBibG9ja1BvcHVwUHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfdHlwZV9lZGl0XCIpO1xyXG5leHBvcnQgY29uc3QgZm9ybVBvcHVwUHJvZmlsZSA9IGJsb2NrUG9wdXBQcm9maWxlLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1cIik7XHJcblxyXG5leHBvcnQgY29uc3QgbmFtZVBvcHVwUHJvZmlsZSA9IGJsb2NrUG9wdXBQcm9maWxlLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2lucHV0X3ZhbHVlX25hbWVcIik7XHJcbmV4cG9ydCBjb25zdCBhYm91dFBvcHVwUHJvZmlsZSA9IGJsb2NrUG9wdXBQcm9maWxlLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2lucHV0X3ZhbHVlX2Fib3V0XCIpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX25hbWVcIik7XHJcbmV4cG9ydCBjb25zdCBwcm9maWxlQWJvdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2Fib3V0XCIpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNhcmRzQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRzJylcclxuZXhwb3J0IGNvbnN0IGVsZW1lbnRUZW1wbGV0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZWxlbWVudC10ZW1wbGF0ZVwiKS5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudFwiKVxyXG5cclxuZXhwb3J0IGNvbnN0IGJ1dHRvbk9wZW5Qb3B1cEFkZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ1dHRvblwiKTtcclxuZXhwb3J0IGNvbnN0IGJsb2NrUG9wdXBBZGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX3R5cGVfYWRkXCIpO1xyXG5leHBvcnQgY29uc3QgZm9ybVBvcHVwQWRkID0gYmxvY2tQb3B1cEFkZC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtXCIpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJsb2NrUG9wdXBJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfdHlwZV9pbWFnZVwiKTtcclxuXHJcbmV4cG9ydCBjb25zdCBibG9ja1BvcHVwQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX2F2YXRhclwiKTtcclxuZXhwb3J0IGNvbnN0IGZvcm1Qb3B1cEF2YXRhcj0gYmxvY2tQb3B1cEF2YXRhci5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtXCIpO1xyXG5leHBvcnQgY29uc3QgYnV0dG9uT3BlblBvcHVwQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hdmF0YXItYnV0dG9uXCIpO1xyXG5leHBvcnQgY29uc3QgaW1hZ2VBdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2ltYWdlXCIpO1xyXG5cclxuZXhwb3J0IGNvbnN0IGJsb2NrUG9wdXBDb25maXJtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX2NvbmZpcm1cIik7XHJcblxyXG5leHBvcnQgY29uc3QgdmFsaWRhdGlvbkNvbmZpZyA9IHtcclxuICBmb3JtU2VsZWN0b3I6ICcucG9wdXBfX2Zvcm0nLFxyXG4gIGlucHV0U2VsZWN0b3I6ICcucG9wdXBfX2lucHV0JyxcclxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogJy5wb3B1cF9fc2F2ZScsXHJcbiAgaW5hY3RpdmVCdXR0b25DbGFzczogJ3BvcHVwX19zYXZlX2FjdGl2ZScsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiAncG9wdXBfX2lucHV0X2Vycm9yJyxcclxuICBlcnJvckNsYXNzOiAncG9wdXBfX2Vycm9yX2FjdGl2ZScsXHJcbiAgcG9wdXBFcnJvclR5cGU6Jy5wb3B1cF9fZXJyb3JfdHlwZV8nXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBjb25mID0ge1xyXG4gIGlkOiBcImNvaG9ydC01MVwiLFxyXG4gIHVybDogXCJodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY29cIixcclxuICBoZWFkZXJzOiB7XHJcbiAgICBhdXRob3JpemF0aW9uOiAnYzU0NGRiNDgtM2RkNi00NWJmLThkNWQtMzY5ZTc1NGUyNDJkJyxcclxuICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcclxuICB9XHJcbn0iLCJleHBvcnQgY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIGRhdGEsXG4gICAgdXNlcixcbiAgICB0ZW1wbGF0ZSxcbiAgICBoYW5kbGVDYXJkQ2xpY2ssXG4gICAgaGFuZGxlQ2xpY2tEZWxldGUsXG4gICAgaGFuZGxlQ2xpY2tMaWtlXG4gICkge1xuICAgIHRoaXMuX2RhdGEgPSBkYXRhO1xuICAgIHRoaXMuX3VzZXIgPSB1c2VyO1xuICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcbiAgICB0aGlzLl9saWtlcyA9IGRhdGEubGlrZXM7XG4gICAgdGhpcy5fdGVtcGxhdGUgPSB0ZW1wbGF0ZTtcbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XG4gICAgdGhpcy5faGFuZGxlQ2xpY2tEZWxldGUgPSBoYW5kbGVDbGlja0RlbGV0ZTtcbiAgICB0aGlzLl9oYW5kbGVDbGlja0xpa2UgPSBoYW5kbGVDbGlja0xpa2U7XG4gIH1cblxuICBjcmVhdGVFbGVtZW50KCkge1xuICAgIHRoaXMuY2FyZCA9IHRoaXMuX3RlbXBsYXRlLmNsb25lTm9kZSh0cnVlKTtcbiAgICB0aGlzLl9lbGVtZW50SW1hZ2UgPSB0aGlzLmNhcmQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19pbWFnZVwiKTtcbiAgICB0aGlzLl9lbGVtZW50TmFtZSA9IHRoaXMuY2FyZC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX25hbWVcIik7XG4gICAgdGhpcy5fZWxlbWVudExpa2VzID0gdGhpcy5jYXJkLnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9fbGlrZXNcIik7XG5cbiAgICB0aGlzLl9lbGVtZW50TmFtZS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG4gICAgdGhpcy5fZWxlbWVudEltYWdlLnNldEF0dHJpYnV0ZShcInNyY1wiLCB0aGlzLl9saW5rKTtcbiAgICB0aGlzLl9lbGVtZW50SW1hZ2Uuc2V0QXR0cmlidXRlKFwiYWx0XCIsIHRoaXMuX25hbWUpO1xuXG4gICAgdGhpcy5fZWxlbWVudEJ1dHRvbkRlbCA9IHRoaXMuY2FyZC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX3JlbW92ZVwiKTtcbiAgICB0aGlzLl9lbGVtZW50QnV0dG9uTGlrZSA9IHRoaXMuY2FyZC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX2xpa2VcIik7XG5cbiAgICB0aGlzLl9iaW5kRGVsZXRlSGFuZGxlcigpO1xuICAgIHRoaXMuX2JpbmRMaWtlSGFuZGxlcigpO1xuICAgIHRoaXMuX2JpbmRPcGVuSGFuZGxlcigpO1xuICAgIHRoaXMuc2V0TGlrZXModGhpcy5fbGlrZXMpO1xuXG4gICAgaWYgKHRoaXMuX2RhdGEub3duZXIuX2lkID09PSB0aGlzLl91c2VyLl9pZCkge1xuICAgICAgdGhpcy5fZWxlbWVudEJ1dHRvbkRlbC5jbGFzc0xpc3QucmVtb3ZlKFwiZWxlbWVudF9fcmVtb3ZlX2luYWN0aXZlXCIpO1xuICAgIH1cblxuICAgIGlmIChcbiAgICAgIHRoaXMuX2xpa2VzLnNvbWUoKG93bmVyKSA9PiB7XG4gICAgICAgIHJldHVybiBvd25lci5faWQgPT09IHRoaXMuX3VzZXIuX2lkO1xuICAgICAgfSlcbiAgICApIHtcbiAgICAgIHRoaXMuX2VsZW1lbnRCdXR0b25MaWtlLmNsYXNzTGlzdC50b2dnbGUoXCJlbGVtZW50X19saWtlX2FjdGl2ZVwiKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5jYXJkO1xuICB9XG5cbiAgX2JpbmREZWxldGVIYW5kbGVyKCkge1xuICAgIHRoaXMuX2VsZW1lbnRCdXR0b25EZWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUNsaWNrRGVsZXRlKHRoaXMpO1xuICAgIH0pO1xuICB9XG5cbiAgX2JpbmRMaWtlSGFuZGxlcigpIHtcbiAgICB0aGlzLl9lbGVtZW50QnV0dG9uTGlrZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlQ2xpY2tMaWtlKCk7XG4gICAgfSk7XG4gIH1cblxuICBfYmluZE9wZW5IYW5kbGVyKCkge1xuICAgIHRoaXMuX2VsZW1lbnRJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5faGFuZGxlQ2FyZENsaWNrKTtcbiAgfVxuXG4gIGdldElkKCkge1xuICAgIHJldHVybiB0aGlzLl9kYXRhLl9pZDtcbiAgfVxuXG4gIHJlbW92ZUNhcmQoKSB7XG4gICAgdGhpcy5jYXJkLnJlbW92ZSgpO1xuICAgIHRoaXMuY2FyZCA9IG51bGw7XG4gIH1cblxuICBnZXRMaWtlKCkge1xuICAgIGlmICh0aGlzLl9lbGVtZW50QnV0dG9uTGlrZS5jbGFzc0xpc3QuY29udGFpbnMoXCJlbGVtZW50X19saWtlX2FjdGl2ZVwiKSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBzZXRMaWtlcyhsaWtlcykge1xuICAgIHRoaXMuX2VsZW1lbnRMaWtlcy50ZXh0Q29udGVudCA9IGxpa2VzLmxlbmd0aDtcbiAgfVxuXG4gIHVwZGF0ZUxpa2VzKCkge1xuICAgIHRoaXMuX2VsZW1lbnRCdXR0b25MaWtlLmNsYXNzTGlzdC50b2dnbGUoXCJlbGVtZW50X19saWtlX2FjdGl2ZVwiKTtcbiAgfVxufVxuIiwiZXhwb3J0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3RvcihjbGFzc2VzLCBmb3JtKSB7XG4gICAgdGhpcy5fY2xhc3NlcyA9IGNsYXNzZXM7XG4gICAgdGhpcy5fZm9ybSA9IGZvcm07XG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbShcbiAgICAgIHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9jbGFzc2VzLmlucHV0U2VsZWN0b3IpXG4gICAgKTtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKFxuICAgICAgdGhpcy5fY2xhc3Nlcy5zdWJtaXRCdXR0b25TZWxlY3RvclxuICAgICk7XG4gIH1cblxuICBfc2hvd0lucHV0RXJyb3IgPSAoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpID0+IHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBgJHt0aGlzLl9jbGFzc2VzLnBvcHVwRXJyb3JUeXBlfSR7aW5wdXRFbGVtZW50LmlkfWBcbiAgICApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2NsYXNzZXMuaW5wdXRFcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fY2xhc3Nlcy5lcnJvckNsYXNzKTtcbiAgfTtcblxuICBfaGlkZUlucHV0RXJyb3IgPSAoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKFxuICAgICAgYCR7dGhpcy5fY2xhc3Nlcy5wb3B1cEVycm9yVHlwZX0ke2lucHV0RWxlbWVudC5pZH1gXG4gICAgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jbGFzc2VzLmlucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY2xhc3Nlcy5lcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xuICB9O1xuXG4gIF9jaGVja0lucHV0VmFsaWRpdHkgPSAoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICB9XG4gIH07XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzID0gKCkgPT4ge1xuICAgIHRoaXMudG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XG4gICAgICAgIHRoaXMudG9nZ2xlQnV0dG9uU3RhdGUodGhpcy5faW5wdXRMaXN0LCB0aGlzLl9idXR0b25FbGVtZW50KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIHJldHVybiB0aGlzLl9idXR0b25FbGVtZW50O1xuICB9O1xuXG4gIGVuYWJsZVZhbGlkYXRpb24gPSAoKSA9PiB7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfTtcblxuICBfaGFzSW52YWxpZElucHV0KCkge1xuICAgIHJldHVybiB0aGlzLl9pbnB1dExpc3Quc29tZSgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICByZXR1cm4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcbiAgICB9KTtcbiAgfVxuXG4gIHRvZ2dsZUJ1dHRvblN0YXRlKCkge1xuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLCBcImRpc2FibGVkXCIpO1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2NsYXNzZXMuaW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKFwiZGlzYWJsZWRcIik7XG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fY2xhc3Nlcy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICB9XG4gIH1cblxuICBkZWxldGVFcnJvcnMoKSB7XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICB9KTtcbiAgfVxufVxuIiwiZXhwb3J0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7cmVuZGVyZXJ9LCBjb250YWluZXJTZWxlY3Rvcil7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLl9jb250YWluZXIgPSBjb250YWluZXJTZWxlY3RvcjtcbiAgfVxuXG4gIHJlbmRlckl0ZW1zKHtpdGVtcywgdXNlcn0pIHtcbiAgICBpdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgdGhpcy5fcmVuZGVyZXIoe2VsZW1lbnQ6IGl0ZW0sIHVzZXI6IHVzZXJ9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5hcHBlbmQoZWxlbWVudCk7XG4gIH1cbiAgXG59XG5cblxuIiwiZXhwb3J0IGNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXApIHtcbiAgICB0aGlzLl9wb3B1cCA9IHBvcHVwO1xuICAgIHRoaXMuX2J1dHRvbkNsb3NlUG9wdXAgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19jbG9zZVwiKTtcbiAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcyk7XG4gIH1cblxuICBvcGVuKCkge1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9pcy1vcGVuZWRcIik7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZShcInBvcHVwX2lzLW9wZW5lZFwiKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICBfaGFuZGxlRXNjQ2xvc2UoZXZ0KSB7XG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9idXR0b25DbG9zZVBvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICAgIHRoaXMuY2xvc2UodGhpcy5fcG9wdXApO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuICAgICAgaWYgKGV2ZW50LnRhcmdldCA9PT0gZXZlbnQuY3VycmVudFRhcmdldCkge1xuICAgICAgICB0aGlzLmNsb3NlKHRoaXMuX3BvcHVwKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuIiwiaW1wb3J0IHsgUG9wdXAgfSBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwKSB7XG4gICAgc3VwZXIocG9wdXApO1xuICAgIHRoaXMuX25hbWUgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbWFnZS1uYW1lXCIpO1xuICAgIHRoaXMuX2ltYWdlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW1hZ2VcIik7XG4gIH1cblxuICBvcGVuKGNhcmROYW1lLCBjYXJkSW1hZ2UpIHtcbiAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gY2FyZE5hbWU7XG4gICAgdGhpcy5faW1hZ2Uuc2V0QXR0cmlidXRlKFwic3JjXCIsIGNhcmRJbWFnZSk7XG4gICAgdGhpcy5faW1hZ2Uuc2V0QXR0cmlidXRlKFwiYWx0XCIsIGNhcmROYW1lKTtcbiAgICBzdXBlci5vcGVuKCk7XG4gIH1cbn1cbiIsImltcG9ydCAqIGFzIHV0aWxzIGZyb20gXCIuLi9zY3JpcHRzL3V0aWxzLmpzXCI7XG5pbXBvcnQgKiBhcyBpbmRleCBmcm9tIFwiLi4vaW5kZXguanNcIjtcbmltcG9ydCB7IFBvcHVwIH0gZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwLCBjYWxsYmFjaykge1xuICAgIHN1cGVyKHBvcHVwKTtcbiAgICB0aGlzLl9jYWxsYmFjayA9IGNhbGxiYWNrO1xuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtXCIpO1xuICAgIHRoaXMuaW5wdXRzID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwX19pbnB1dFwiKTtcbiAgICB0aGlzLmJ1dHRvblNhdmUgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19zYXZlXCIpO1xuICB9XG5cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIHRoaXMuX3ZhbHVlcyA9IHt9O1xuICAgIHRoaXMuaW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICB0aGlzLl92YWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcy5fdmFsdWVzO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLl9jYWxsYmFjayh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgICB9KTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHN1cGVyLmNsb3NlKCk7XG4gICAgdGhpcy5fZm9ybS5yZXNldCgpO1xuICB9XG59XG4iLCJpbXBvcnQgeyBQb3B1cCB9IGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgUG9wdXBDb25maXJtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwLCBjYWxsYmFjaykge1xyXG4gICAgc3VwZXIocG9wdXApO1xyXG4gICAgdGhpcy5fY2FsbGJhY2sgPSBjYWxsYmFjaztcclxuICAgIHRoaXMuX2NvbmZpcm1CdXR0b20gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19jb25maXJtXCIpO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgdGhpcy5fY29uZmlybUJ1dHRvbS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2ZW50KSA9PiB7XHJcbiAgICAgIHRoaXMuX2NhbGxiYWNrKHRoaXMuX2VsZW1lbnQpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBzZXRFbGVtZW50KGVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2VsZW1lbnQgPSBlbGVtZW50O1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3Rvcih7IHVzZXJOYW1lLCB1c2VyQWJvdXQsIGF2YXRhciB9KSB7XG4gICAgdGhpcy5fdXNlck5hbWUgPSB1c2VyTmFtZTtcbiAgICB0aGlzLl91c2VyQWJvdXQgPSB1c2VyQWJvdXQ7XG4gICAgdGhpcy5fYXZhdGFyID0gYXZhdGFyO1xuICB9XG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgdGhpcy5pbmZvID0ge1xuICAgICAgbmFtZTogdGhpcy5fdXNlck5hbWUudGV4dENvbnRlbnQsXG4gICAgICBhYm91dDogdGhpcy5fdXNlckFib3V0LnRleHRDb250ZW50LFxuICAgIH07XG4gICAgcmV0dXJuIHRoaXMuaW5mbztcbiAgfVxuXG4gIHNldFVzZXJJbmZvKGRhdGEpIHtcbiAgICB0aGlzLl91c2VyTmFtZS50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcbiAgICB0aGlzLl91c2VyQWJvdXQudGV4dENvbnRlbnQgPSBkYXRhLmFib3V0O1xuICAgIHRoaXMuX2F2YXRhci5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgZGF0YS5hdmF0YXIpO1xuICB9XG59XG4iLCJleHBvcnQgY2xhc3MgQXBpIHtcclxuICBjb25zdHJ1Y3Rvcihjb25maWcpe1xyXG4gICAgdGhpcy5fdXJsID0gY29uZmlnLnVybFxyXG4gICAgdGhpcy5faGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzXHJcbiAgICB0aGlzLl9pZCA9IGNvbmZpZy5pZFxyXG4gICAgdGhpcy5fbGluayA9IGAke3RoaXMuX3VybH0vdjEvJHt0aGlzLl9pZH1gXHJcbiAgfVxyXG5cclxuICBnZXRBbGxDYXJkcygpe1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2xpbmt9L2NhcmRzYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXHJcbiAgICB9KVxyXG4gICAgLnRoZW4oKHJlcyk9PntcclxuICAgICAgICByZXR1cm4gdGhpcy5fb25SZXNwb25jZShyZXMpXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgZ2V0VXNlcigpe1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2xpbmt9L3VzZXJzL21lYCwge1xyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXHJcbiAgICB9KVxyXG4gICAgLnRoZW4oKHJlcyk9PntcclxuICAgICAgcmV0dXJuIHRoaXMuX29uUmVzcG9uY2UocmVzKVxyXG4gICAgfSlcclxuICB9XHJcblxyXG4gIGVkaXRVc2VyKG5hbWUsIGFib3V0KSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fbGlua30vdXNlcnMvbWVgLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BBVENIJyxcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG5hbWU6IG5hbWUsXHJcbiAgICAgICAgYWJvdXQ6IGFib3V0XHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gICAgLnRoZW4oKHJlcyk9PntcclxuICAgICAgcmV0dXJuIHRoaXMuX29uUmVzcG9uY2UocmVzKVxyXG4gICAgfSk7ICBcclxuICB9XHJcblxyXG4gIGRlbGV0ZUNhcmQoaWRDYXJkKXtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9saW5rfS9jYXJkcy8ke2lkQ2FyZH1gLCB7XHJcbiAgICAgIG1ldGhvZDogJ0RFTEVURScsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcclxuICAgIH0pXHJcbiAgICAudGhlbigocmVzKT0+e1xyXG4gICAgICByZXR1cm4gdGhpcy5fb25SZXNwb25jZShyZXMpXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgYWRkQ2FyZChuYW1lLCBsaW5rKXtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9saW5rfS9jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiBuYW1lLFxyXG4gICAgICAgIGxpbms6IGxpbmtcclxuICAgICAgfSlcclxuICAgIH0pXHJcbiAgICAudGhlbigocmVzKT0+e1xyXG4gICAgICByZXR1cm4gdGhpcy5fb25SZXNwb25jZShyZXMpXHJcbiAgICB9KTsgXHJcbiAgfVxyXG5cclxuICBfb25SZXNwb25jZShyZXMpe1xyXG4gICAgaWYocmVzLm9rKXtcclxuICAgICAgcmV0dXJuIHJlcy5qc29uKClcclxuICAgIH1cclxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdCh7bWFzc2FnZTogJ9Ce0YjQuNCx0LrQsCDQvdCwINGB0LXRgNCy0LXRgNC1JywgcmVzfSlcclxuICB9XHJcblxyXG5hZGRMaWtlKGlkQ2FyZCl7XHJcbiAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2xpbmt9L2NhcmRzLyR7aWRDYXJkfS9saWtlc2AsIHtcclxuICAgIG1ldGhvZDogJ1BVVCcsXHJcbiAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gIH0pXHJcbiAgLnRoZW4oKHJlcyk9PntcclxuICAgIHJldHVybiB0aGlzLl9vblJlc3BvbmNlKHJlcylcclxuICB9KTsgXHJcbn1cclxuXHJcbmRlbGV0ZUxpa2UoaWRDYXJkKXtcclxuICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fbGlua30vY2FyZHMvJHtpZENhcmR9L2xpa2VzYCwge1xyXG4gICAgbWV0aG9kOiAnREVMRVRFJyxcclxuICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgfSlcclxuICAudGhlbigocmVzKT0+e1xyXG4gICAgcmV0dXJuIHRoaXMuX29uUmVzcG9uY2UocmVzKVxyXG4gIH0pOyBcclxufVxyXG5cclxuZWRpdEF2YXRhcihhdmF0YXIpIHtcclxuICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fbGlua30vdXNlcnMvbWUvYXZhdGFyYCwge1xyXG4gICAgbWV0aG9kOiAnUEFUQ0gnLFxyXG4gICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgYXZhdGFyOiBhdmF0YXJcclxuICAgIH0pXHJcbiAgfSlcclxuICAudGhlbigocmVzKT0+e1xyXG4gICAgcmV0dXJuIHRoaXMuX29uUmVzcG9uY2UocmVzKVxyXG4gIH0pOyAgXHJcbn1cclxuXHJcbn0iLCJpbXBvcnQgJy4vcGFnZXMvaW5kZXguY3NzJ1xuaW1wb3J0ICogYXMgdXRpbHMgZnJvbSBcIi4vc2NyaXB0cy91dGlscy5qc1wiO1xuaW1wb3J0IHsgQ2FyZCB9IGZyb20gXCIuL3NjcmlwdHMvQ2FyZC5qc1wiO1xuaW1wb3J0IHtGb3JtVmFsaWRhdG9yfSBmcm9tIFwiLi9zY3JpcHRzL0Zvcm1WYWxpZGF0b3IuanNcIlxuaW1wb3J0IHsgU2VjdGlvbiB9IGZyb20gXCIuL3NjcmlwdHMvU2VjdGlvbi5qc1wiO1xuaW1wb3J0IHsgUG9wdXBXaXRoSW1hZ2UgfSBmcm9tIFwiLi9zY3JpcHRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XG5pbXBvcnQgeyBQb3B1cFdpdGhGb3JtIH0gZnJvbSBcIi4vc2NyaXB0cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XG5pbXBvcnQgeyBQb3B1cENvbmZpcm0gfSBmcm9tICcuL3NjcmlwdHMvUG9wdXBDb25maXJtLmpzJztcbmltcG9ydCB7IFVzZXJJbmZvIH0gZnJvbSBcIi4vc2NyaXB0cy9Vc2VySW5mby5qc1wiO1xuaW1wb3J0IHsgQXBpIH0gZnJvbSBcIi4vc2NyaXB0cy9BcGkuanNcIjtcblxuY29uc3QgYXBpID0gbmV3IEFwaSAodXRpbHMuY29uZilcbmNvbnN0IGFkZFZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHV0aWxzLnZhbGlkYXRpb25Db25maWcsIHV0aWxzLmZvcm1Qb3B1cEFkZClcbmNvbnN0IHByb2ZpbGVWYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih1dGlscy52YWxpZGF0aW9uQ29uZmlnLCB1dGlscy5mb3JtUG9wdXBQcm9maWxlKVxuY29uc3QgYXZhdGFyVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IodXRpbHMudmFsaWRhdGlvbkNvbmZpZywgdXRpbHMuZm9ybVBvcHVwQXZhdGFyKVxuXG5leHBvcnQgY29uc3QgdXNlciA9IG5ldyBVc2VySW5mbyh7dXNlck5hbWU6IHV0aWxzLnByb2ZpbGVOYW1lLCB1c2VyQWJvdXQ6IHV0aWxzLnByb2ZpbGVBYm91dCwgYXZhdGFyOiB1dGlscy5pbWFnZUF2YXRhcn0pXG5cbmNvbnN0IGJsb2NrUG9wdXBQcm9maWxlV2l0aEZvcm0gID0gbmV3IFBvcHVwV2l0aEZvcm0gKHV0aWxzLmJsb2NrUG9wdXBQcm9maWxlLCAodmFsdWVzKT0+e1xuICBibG9ja1BvcHVwUHJvZmlsZVdpdGhGb3JtLmJ1dHRvblNhdmUudGV4dENvbnRlbnQgPSBcItCh0L7RhdGA0LDQvdC10L3QuNC1Li4uXCJcbiAgYXBpLmVkaXRVc2VyKHZhbHVlcy5uYW1lLCB2YWx1ZXMuYWJvdXQpXG4gICAgLnRoZW4oKGRhdGEpPT57XG4gICAgICB1c2VyLnNldFVzZXJJbmZvKGRhdGEpXG4gICAgICBibG9ja1BvcHVwUHJvZmlsZVdpdGhGb3JtLmNsb3NlKClcbiAgICAgIHByb2ZpbGVWYWxpZGF0b3IudG9nZ2xlQnV0dG9uU3RhdGUoKVxuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpPT57XG4gICAgICBjb25zb2xlLmxvZygn0J7RiNC40LHQutCwINGB0LXRgNCy0LXRgNCwJywgZXJyIClcbiAgICB9KVxuICAgIC5maW5hbGx5KCgpPT57XG4gICAgICBibG9ja1BvcHVwUHJvZmlsZVdpdGhGb3JtLmJ1dHRvblNhdmUudGV4dENvbnRlbnQgPSBcItCh0L7RhdGA0LDQvdC10L3QuNGC0YxcIlxuICAgIH0pXG5cbn0pXG5cbmNvbnN0IGJsb2NrUG9wdXBBZGRXaXRoRm9ybSAgPSBuZXcgUG9wdXBXaXRoRm9ybSAodXRpbHMuYmxvY2tQb3B1cEFkZCwgKHZhbHVlcyk9PntcbiAgYmxvY2tQb3B1cEFkZFdpdGhGb3JtLmJ1dHRvblNhdmUudGV4dENvbnRlbnQgPSBcItCh0L7RhdGA0LDQvdC10L3QuNC1Li4uXCJcbiAgUHJvbWlzZS5hbGwoW2FwaS5nZXRVc2VyKCksIGFwaS5hZGRDYXJkKHZhbHVlcy5uYW1lLCB2YWx1ZXMubGluayldKVxuICAgIC50aGVuKChyZXN1bHRzKSA9PiB7XG4gICAgICBjYXJkc1NlY3Rpb24uYWRkSXRlbShjcmVhdGVDYXJkIChyZXN1bHRzWzFdLCByZXN1bHRzWzBdKSlcbiAgICAgIGJsb2NrUG9wdXBBZGRXaXRoRm9ybS5jbG9zZSgpXG4gICAgICBhZGRWYWxpZGF0b3IudG9nZ2xlQnV0dG9uU3RhdGUoKVxuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpPT57XG4gICAgICBjb25zb2xlLmxvZygn0J7RiNC40LHQutCwINGB0LXRgNCy0LXRgNCwJywgZXJyIClcbiAgICB9KVxuICAgIC5maW5hbGx5KCgpPT57XG4gICAgICBibG9ja1BvcHVwQWRkV2l0aEZvcm0uYnV0dG9uU2F2ZS50ZXh0Q29udGVudCA9IFwi0KHQvtGF0YDQsNC90LXQvdC40YLRjFwiXG4gICAgfSlcblxufSlcblxuY29uc3QgYmxvY2tQb3B1cEVkaXRBdmF0YXIgPSBuZXcgUG9wdXBXaXRoRm9ybSAodXRpbHMuYmxvY2tQb3B1cEF2YXRhciwgKHZhbHVlcyk9PntcbiAgYmxvY2tQb3B1cEVkaXRBdmF0YXIuYnV0dG9uU2F2ZS50ZXh0Q29udGVudCA9IFwi0KHQvtGF0YDQsNC90LXQvdC40LUuLi5cIlxuICBhcGkuZWRpdEF2YXRhcih2YWx1ZXMuYXZhdGFyKVxuICAgIC50aGVuKChkYXRhKT0+e1xuICAgICAgdXNlci5zZXRVc2VySW5mbyhkYXRhKVxuICAgICAgYmxvY2tQb3B1cEVkaXRBdmF0YXIuY2xvc2UoKVxuICAgICAgYXZhdGFyVmFsaWRhdG9yLnRvZ2dsZUJ1dHRvblN0YXRlKClcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKT0+e1xuICAgICAgY29uc29sZS5sb2coJ9Ce0YjQuNCx0LrQsCDRgdC10YDQstC10YDQsCcsIGVyciApXG4gICAgfSlcbiAgICAuZmluYWxseSgoKT0+e1xuICAgICAgYmxvY2tQb3B1cEVkaXRBdmF0YXIuYnV0dG9uU2F2ZS50ZXh0Q29udGVudCA9IFwi0KHQvtGF0YDQsNC90LXQvdC40YLRjFwiXG4gICAgfSlcbiAgXG4gIH0pXG5cbmNvbnN0IGltYWdlID0gbmV3IFBvcHVwV2l0aEltYWdlKHV0aWxzLmJsb2NrUG9wdXBJbWFnZSlcblxuY29uc3QgcG9wdXBDb25maXJtID0gbmV3IFBvcHVwQ29uZmlybSAodXRpbHMuYmxvY2tQb3B1cENvbmZpcm0sKGVsZW1lbnQpPT57XG4gIGFwaS5kZWxldGVDYXJkKGVsZW1lbnQuZ2V0SWQoKSlcbiAgICAudGhlbigoKT0+e1xuICAgICAgZWxlbWVudC5yZW1vdmVDYXJkKClcbiAgICAgIHBvcHVwQ29uZmlybS5jbG9zZSgpXG4gICAgfSlcbiAgICAuY2F0Y2goKGVycik9PntcbiAgICAgIGNvbnNvbGUubG9nKCfQntGI0LjQsdC60LAg0YHQtdGA0LLQtdGA0LAnLCBlcnIgKVxuICAgIH0pXG59KVxuXG5jb25zdCBjYXJkc1NlY3Rpb24gPSBuZXcgU2VjdGlvbih7XG4gIHJlbmRlcmVyOiAoe2VsZW1lbnQsIHVzZXJ9KT0+e1xuICAgIGNvbnN0IGNhcmQgPSBjcmVhdGVDYXJkKGVsZW1lbnQsIHVzZXIpXG4gICAgY2FyZHNTZWN0aW9uLmFkZEl0ZW0oY2FyZClcbiAgICB9XG4gIH0sXG4gIHV0aWxzLmNhcmRzQ29udGFpbmVyXG4pXG5cblxuXG5mdW5jdGlvbiBvcGVuRWRpdFBvcHVwKCkge1xuICB1c2VyLmdldFVzZXJJbmZvKClcbiAgdXRpbHMubmFtZVBvcHVwUHJvZmlsZS52YWx1ZSA9IHVzZXIuaW5mby5uYW1lO1xuICB1dGlscy5hYm91dFBvcHVwUHJvZmlsZS52YWx1ZSA9IHVzZXIuaW5mby5hYm91dDtcbiAgcHJvZmlsZVZhbGlkYXRvci5kZWxldGVFcnJvcnMoKVxuICBibG9ja1BvcHVwUHJvZmlsZVdpdGhGb3JtLm9wZW4oKVxufTtcblxuZnVuY3Rpb24gY3JlYXRlQ2FyZChkYXRhLCB1c2VyKXtcbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkIChkYXRhLCB1c2VyLCB1dGlscy5lbGVtZW50VGVtcGxldGUsXG4gICAgXG4gICAgKCk9PntcbiAgICAgIGltYWdlLm9wZW4oZGF0YS5uYW1lLCBkYXRhLmxpbmspXG4gICAgfSxcblxuICAgIChlbGVtZW50KT0+e1xuICAgICAgcG9wdXBDb25maXJtLm9wZW4oKVxuICAgICAgcG9wdXBDb25maXJtLnNldEVsZW1lbnQoZWxlbWVudClcbiAgICB9LFxuICAgIFxuICAgICgpPT57XG4gICAgICBpZihjYXJkLmdldExpa2UoKSl7XG4gICAgICAgIGFwaS5kZWxldGVMaWtlKGNhcmQuZ2V0SWQoKSlcbiAgICAgICAgICAudGhlbigoZGF0YSk9PntcbiAgICAgICAgICAgIGNhcmQuc2V0TGlrZXMoZGF0YS5saWtlcylcbiAgICAgICAgICAgIGNhcmQudXBkYXRlTGlrZXMoKVxuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKChlcnIpPT57XG4gICAgICAgICAgICBjb25zb2xlLmxvZygn0J7RiNC40LHQutCwINGB0LXRgNCy0LXRgNCwJywgZXJyIClcbiAgICAgICAgICB9KVxuICAgICAgfVxuICAgICAgZWxzZXtcbiAgICAgICAgYXBpLmFkZExpa2UoY2FyZC5nZXRJZCgpKVxuICAgICAgICAgIC50aGVuKChkYXRhKT0+e1xuICAgICAgICAgICAgY2FyZC5zZXRMaWtlcyhkYXRhLmxpa2VzKVxuICAgICAgICAgICAgY2FyZC51cGRhdGVMaWtlcygpXG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goKGVycik9PntcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCfQntGI0LjQsdC60LAg0YHQtdGA0LLQtdGA0LAnLCBlcnIgKVxuICAgICAgICAgIH0pXG4gICAgICB9XG4gICAgfVxuICAgIClcblxuXG4gIGNvbnN0IGVsZW1lbnQgPSBjYXJkLmNyZWF0ZUVsZW1lbnQoKVxuXG4gIHJldHVybiBlbGVtZW50XG59XG5cbmZ1bmN0aW9uIG9wZW5BZGRQb3B1cCgpIHtcbiAgYWRkVmFsaWRhdG9yLmRlbGV0ZUVycm9ycygpXG4gIGFkZFZhbGlkYXRvci50b2dnbGVCdXR0b25TdGF0ZSgpXG4gIGJsb2NrUG9wdXBBZGRXaXRoRm9ybS5vcGVuKClcbn07XG5cbmZ1bmN0aW9uIG9wZW5FZGl0QXZhdGFyUG9wdXAoKSB7XG4gIGF2YXRhclZhbGlkYXRvci5kZWxldGVFcnJvcnMoKVxuICBibG9ja1BvcHVwRWRpdEF2YXRhci5vcGVuKClcbn07XG5cblxuXG51dGlscy5idXR0b25PcGVuUG9wdXBBZGQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG9wZW5BZGRQb3B1cCk7XG51dGlscy5idXR0b25PcGVuUG9wdXBQcm9maWxlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBvcGVuRWRpdFBvcHVwKTtcbnV0aWxzLmJ1dHRvbk9wZW5Qb3B1cEF2YXRhci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb3BlbkVkaXRBdmF0YXJQb3B1cCk7XG5cbmFkZFZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKClcbnByb2ZpbGVWYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpXG5ibG9ja1BvcHVwUHJvZmlsZVdpdGhGb3JtLnNldEV2ZW50TGlzdGVuZXJzKClcbmJsb2NrUG9wdXBBZGRXaXRoRm9ybS5zZXRFdmVudExpc3RlbmVycygpXG5pbWFnZS5zZXRFdmVudExpc3RlbmVycygpXG5wb3B1cENvbmZpcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKVxuYXZhdGFyVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKVxuYmxvY2tQb3B1cEVkaXRBdmF0YXIuc2V0RXZlbnRMaXN0ZW5lcnMoKVxuXG5cblxuXG5Qcm9taXNlLmFsbChbYXBpLmdldFVzZXIoKSwgYXBpLmdldEFsbENhcmRzKCldKVxuICAudGhlbigocmVzdWx0cykgPT4ge1xuICAgIHVzZXIuc2V0VXNlckluZm8ocmVzdWx0c1swXSlcbiAgICBjYXJkc1NlY3Rpb24ucmVuZGVySXRlbXMoe2l0ZW1zOiByZXN1bHRzWzFdLCB1c2VyOiByZXN1bHRzWzBdfSlcbiAgfSlcbiAgLmNhdGNoKChlcnIpPT57XG4gICAgY29uc29sZS5sb2coJ9Ce0YjQuNCx0LrQsCDRgdC10YDQstC10YDQsCcsIGVyciApXG4gIH0pXG5cbiAgXG4iXSwibmFtZXMiOlsiYnV0dG9uT3BlblBvcHVwUHJvZmlsZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImJsb2NrUG9wdXBQcm9maWxlIiwiZm9ybVBvcHVwUHJvZmlsZSIsIm5hbWVQb3B1cFByb2ZpbGUiLCJhYm91dFBvcHVwUHJvZmlsZSIsInByb2ZpbGVOYW1lIiwicHJvZmlsZUFib3V0IiwiY2FyZHNDb250YWluZXIiLCJlbGVtZW50VGVtcGxldGUiLCJjb250ZW50IiwiYnV0dG9uT3BlblBvcHVwQWRkIiwiYmxvY2tQb3B1cEFkZCIsImZvcm1Qb3B1cEFkZCIsImJsb2NrUG9wdXBJbWFnZSIsImJsb2NrUG9wdXBBdmF0YXIiLCJmb3JtUG9wdXBBdmF0YXIiLCJidXR0b25PcGVuUG9wdXBBdmF0YXIiLCJpbWFnZUF2YXRhciIsImJsb2NrUG9wdXBDb25maXJtIiwidmFsaWRhdGlvbkNvbmZpZyIsImZvcm1TZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwicG9wdXBFcnJvclR5cGUiLCJDYXJkIiwiZGF0YSIsInVzZXIiLCJ0ZW1wbGF0ZSIsImhhbmRsZUNhcmRDbGljayIsImhhbmRsZUNsaWNrRGVsZXRlIiwiaGFuZGxlQ2xpY2tMaWtlIiwidGhpcyIsIl9kYXRhIiwiX3VzZXIiLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfbGlrZXMiLCJsaWtlcyIsIl90ZW1wbGF0ZSIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfaGFuZGxlQ2xpY2tEZWxldGUiLCJfaGFuZGxlQ2xpY2tMaWtlIiwiY2FyZCIsImNsb25lTm9kZSIsIl9lbGVtZW50SW1hZ2UiLCJfZWxlbWVudE5hbWUiLCJfZWxlbWVudExpa2VzIiwidGV4dENvbnRlbnQiLCJzZXRBdHRyaWJ1dGUiLCJfZWxlbWVudEJ1dHRvbkRlbCIsIl9lbGVtZW50QnV0dG9uTGlrZSIsIl9iaW5kRGVsZXRlSGFuZGxlciIsIl9iaW5kTGlrZUhhbmRsZXIiLCJfYmluZE9wZW5IYW5kbGVyIiwic2V0TGlrZXMiLCJvd25lciIsIl9pZCIsImNsYXNzTGlzdCIsInJlbW92ZSIsInNvbWUiLCJ0b2dnbGUiLCJhZGRFdmVudExpc3RlbmVyIiwiY29udGFpbnMiLCJsZW5ndGgiLCJGb3JtVmFsaWRhdG9yIiwiY2xhc3NlcyIsImZvcm0iLCJpbnB1dEVsZW1lbnQiLCJlcnJvck1lc3NhZ2UiLCJlcnJvckVsZW1lbnQiLCJfZm9ybSIsIl9jbGFzc2VzIiwiaWQiLCJhZGQiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hpZGVJbnB1dEVycm9yIiwiX3Nob3dJbnB1dEVycm9yIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJ0b2dnbGVCdXR0b25TdGF0ZSIsIl9pbnB1dExpc3QiLCJmb3JFYWNoIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsIl9idXR0b25FbGVtZW50IiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsIl9oYXNJbnZhbGlkSW5wdXQiLCJyZW1vdmVBdHRyaWJ1dGUiLCJTZWN0aW9uIiwiY29udGFpbmVyU2VsZWN0b3IiLCJyZW5kZXJlciIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJpdGVtcyIsIml0ZW0iLCJlbGVtZW50IiwiYXBwZW5kIiwiUG9wdXAiLCJwb3B1cCIsIl9wb3B1cCIsIl9idXR0b25DbG9zZVBvcHVwIiwiX2hhbmRsZUVzY0Nsb3NlIiwiYmluZCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJldnQiLCJrZXkiLCJjbG9zZSIsImV2ZW50IiwidGFyZ2V0IiwiY3VycmVudFRhcmdldCIsIlBvcHVwV2l0aEltYWdlIiwiX2ltYWdlIiwiY2FyZE5hbWUiLCJjYXJkSW1hZ2UiLCJQb3B1cFdpdGhGb3JtIiwiY2FsbGJhY2siLCJfY2FsbGJhY2siLCJpbnB1dHMiLCJidXR0b25TYXZlIiwiX3ZhbHVlcyIsImlucHV0IiwidmFsdWUiLCJwcmV2ZW50RGVmYXVsdCIsIl9nZXRJbnB1dFZhbHVlcyIsInJlc2V0IiwiUG9wdXBDb25maXJtIiwiX2NvbmZpcm1CdXR0b20iLCJfZWxlbWVudCIsIlVzZXJJbmZvIiwidXNlck5hbWUiLCJ1c2VyQWJvdXQiLCJhdmF0YXIiLCJfdXNlck5hbWUiLCJfdXNlckFib3V0IiwiX2F2YXRhciIsImluZm8iLCJhYm91dCIsImFwaSIsImNvbmZpZyIsIl91cmwiLCJ1cmwiLCJfaGVhZGVycyIsImhlYWRlcnMiLCJmZXRjaCIsInRoZW4iLCJyZXMiLCJfb25SZXNwb25jZSIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiaWRDYXJkIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsIm1hc3NhZ2UiLCJhdXRob3JpemF0aW9uIiwiYWRkVmFsaWRhdG9yIiwidXRpbHMiLCJwcm9maWxlVmFsaWRhdG9yIiwiYXZhdGFyVmFsaWRhdG9yIiwiYmxvY2tQb3B1cFByb2ZpbGVXaXRoRm9ybSIsInZhbHVlcyIsImVkaXRVc2VyIiwic2V0VXNlckluZm8iLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJmaW5hbGx5IiwiYmxvY2tQb3B1cEFkZFdpdGhGb3JtIiwiYWxsIiwiZ2V0VXNlciIsImFkZENhcmQiLCJyZXN1bHRzIiwiY2FyZHNTZWN0aW9uIiwiYWRkSXRlbSIsImNyZWF0ZUNhcmQiLCJibG9ja1BvcHVwRWRpdEF2YXRhciIsImVkaXRBdmF0YXIiLCJpbWFnZSIsInBvcHVwQ29uZmlybSIsImRlbGV0ZUNhcmQiLCJnZXRJZCIsInJlbW92ZUNhcmQiLCJvcGVuIiwic2V0RWxlbWVudCIsImdldExpa2UiLCJkZWxldGVMaWtlIiwidXBkYXRlTGlrZXMiLCJhZGRMaWtlIiwiY3JlYXRlRWxlbWVudCIsImRlbGV0ZUVycm9ycyIsImdldFVzZXJJbmZvIiwiZW5hYmxlVmFsaWRhdGlvbiIsInNldEV2ZW50TGlzdGVuZXJzIiwiZ2V0QWxsQ2FyZHMiLCJyZW5kZXJJdGVtcyJdLCJzb3VyY2VSb290IjoiIn0=